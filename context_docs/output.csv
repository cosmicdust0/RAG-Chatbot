"OBJECT ORIENTED PROGRAMMING :1. Programming Paradigm ( types : functional/Procedural , OOP )2. What is OOPS3. Need of OOPS4. What is Functional/Procedural prog ?5. Pillars/features of oops6. What is Class ?7. What are Objects ?8. Access specifiers9. Polymorphism10.Overloading (Function , Operator)11. Overriding12.Virtual (Vtable , Vptr)13.constructor14.Destructor15.Types of constructors16. Inheritance17.Virtual functions18.Pure virtual functions19.Abstract class20.Types of Polymorphism (runtime , compile time)21.Early binding , late binding22.Static variable and function23.Friend class and function24.Copy constructor (Shallow Copy and Deep Copy)25.This pointer26.Namespace27.Structure vs class28.Why not virtual constructor ?29.Types of inheritance30.Exception handling (try, catch, and throw)31.Diamond Problem32.Composition and Aggregation33.How would you prevent a class in C++ from being inherited by other classes?34. final keyword35.Anonymous class in C++ (class without name , can’t have constructor ordestructor)"
Anonymous class in C++
"OBJECT ORIENTED PROGRAMMING :1. Programming Paradigm ( types : functional/Procedural , OOP )2. What is OOPS3. Need of OOPS4. What is Functional/Procedural prog ?5. Pillars/features of oops6. What is Class ?7. What are Objects ?8. Access specifiers9. Polymorphism10.Overloading (Function , Operator)11. Overriding12.Virtual (Vtable , Vptr)13.constructor14.Destructor15.Types of constructors16. Inheritance17.Virtual functions18.Pure virtual functions19.Abstract class20.Types of Polymorphism (runtime , compile time)21.Early binding , late binding22.Static variable and function23.Friend class and function24.Copy constructor (Shallow Copy and Deep Copy)25.This pointer26.Namespace27.Structure vs class28.Why not virtual constructor ?29.Types of inheritance30.Exception handling (try, catch, and throw)31.Diamond Problem32.Composition and Aggregation33.How would you prevent a class in C++ from being inherited by other classes?34. final keyword35.Anonymous class in C++ (class without name , can’t have constructor ordestructor)"
Anonymous class in C++
"GENERAL Programming( C / C++ ) Question :1.Inline function2. Namespace ( to avoid name conflict )3. Pointer4. Reference (can’t be left uninitialised like ptr and ptr can also be NULL)Is not allocated extra memory like ptr,we can’t create array of references5. Call by value and call by reference6. Difference b/w pointer and reference7. Template(generic programming)8. C vs C++9. C/C++ memory layout (Stack , Heap , BSS{initialized , uninitialised}, Text)10.differences between malloc, calloc,realloc,free and new,delete?11. const keyword12. final keyword (to prevent inheritance)13.difference between a structure and a class in C++ ?14.Describe the use of the static keyword in C and C++ with respect to functionsand variables.15.Types of storage class in c (auto, register, static, and extern)16.How do you read and write data from/to a file in C and C++ ?17.Break vs continue vs return18.Escape sequence in c/c++ (\n , \t)19. \n vs endl20.Describe what a memory leak is and how it can be avoided in C and C++.21.Explain the difference between stack memory and heap memory. When wouldyou use each ?22.Null Pointer,Wild Pointer,Dangling Pointer,Void Pointer (or Generic Pointer)23.Preprocessor Directives ( #define , #include)24.Pragma25.Macros26.macro vs typedef (typedef only for data types)27. Inline Functions and Macros28.What is the const pointer and pointer to const in C? Provide examples of each.29.Unary operators30.Pre , post increment/decrement31.Precedence and associativity32.Arithmetic Operators,Relational and Logical Operators,BitwiseOperators,Assignment Operators and Compound Assignment,ConditionalOperator (Ternary Operator),sizeof Operator,"
Reference
"Is not allocated extra memory like ptr,we can’t create array of references"
"GENERAL Programming( C / C++ ) Question :1.Inline function2. Namespace ( to avoid name conflict )3. Pointer4. Reference (can’t be left uninitialised like ptr and ptr can also be NULL)Is not allocated extra memory like ptr,we can’t create array of references5. Call by value and call by reference6. Difference b/w pointer and reference7. Template(generic programming)8. C vs C++9. C/C++ memory layout (Stack , Heap , BSS{initialized , uninitialised}, Text)10.differences between malloc, calloc,realloc,free and new,delete?11. const keyword12. final keyword (to prevent inheritance)13.difference between a structure and a class in C++ ?14.Describe the use of the static keyword in C and C++ with respect to functionsand variables.15.Types of storage class in c (auto, register, static, and extern)16.How do you read and write data from/to a file in C and C++ ?17.Break vs continue vs return18.Escape sequence in c/c++ (\n , \t)19. \n vs endl20.Describe what a memory leak is and how it can be avoided in C and C++.21.Explain the difference between stack memory and heap memory. When wouldyou use each ?22.Null Pointer,Wild Pointer,Dangling Pointer,Void Pointer (or Generic Pointer)23.Preprocessor Directives ( #define , #include)24.Pragma25.Macros26.macro vs typedef (typedef only for data types)27. Inline Functions and Macros28.What is the const pointer and pointer to const in C? Provide examples of each.29.Unary operators30.Pre , post increment/decrement31.Precedence and associativity32.Arithmetic Operators,Relational and Logical Operators,BitwiseOperators,Assignment Operators and Compound Assignment,ConditionalOperator (Ternary Operator),sizeof Operator,"
Reference
"Is not allocated extra memory like ptr,we can’t create array of references"
"33. Describe the various control structures in C and C++ (if, switch, for, while,do-while).34.Switch case35. In absence of break (fall through)36. In absence of default37.Different loops38.Static vs dynamic memory allocation39. Explain the concept of scope and lifetime of variables in C and C++.40.Typecasting41.Structure padding42.Primitive Data type vs Non primitive data type43.enum"
"Links :OS : Top 100 Operating System Interview Questions (2023) (geeksforgeeks.org)40+ Operating System Interview Questions (2023) - InterviewbitCN : Top Networking Interview Questions (2023) - InterviewBit100+ Networking Interview Questions and Answers (2023) (guru99.com)DBMS : Top DBMS Interview Questions and Answers(2023 Updated) - InterviewBitLast Minute Notes - DBMS - GeeksforGeeksCommonly asked DBMS interview questions|Set 1 (geeksforgeeks.org)Commonly asked DBMS interview questions|Set 2 (geeksforgeeks.org)Top 52 DBMS Interview Questions (2023) - javatpointSQL : SQL Interview Questions CHEAT SHEET (2023) - InterviewBitThe questions below are mixed and asked most frequently in interviews , pleaseread the articles mentioned on top of page first then it’ll become easy for you toanswer such questions .( You can also refer Chat-GPT for these questions )1.TCP vs UDP2.Swap without using 3rd variable (Code , Xor wala method ek Plus , Minus wala)3.ACID properties of DBMS4.Explain and write code for Binary search5.Explain how merge sort works ? (Code + Dry Run)6.Why do we need Computer Networks ?7.FIat file or File System vs Data Base8.What is an Operating System ?9.Types of Operating System ?10. Python vs C++ (Python has interpreter and C++ has compiler , slow and fast....otherthings)11. Reverse a linked list12. Explain and write code for quick sort13. Thread vs Process14. Process vs Program15. WHat is thread ?16. Different Process states ?17. What is Thrashing , what is Belady’s anomaly and in which Page replacement algorithmit happens (FIFO) ?18. What is paging ?19. Paging vs Segmentation ?20. What is demand paging ?21. What is virtual memory ?22. What is Dead Lock ? How we can prevent it ? (Dead lock avoidance and Dead lockprevention )23. What is starvation ? Starvation vs Dead lock"
"24. What is internal and external fragmentation ?25. What is non-contigous and contiguous memory mgmt ?26. What is cache memory ?27. What is a semaphore ? explain it’s types and usage ? (Binary vs counting )28. What are locks and how does it differ from semaphores ?29. What is the critical section ?30. What are race conditions and how does it occur ?31. What is mutual exclusion ?32. What is mutex ?33. Explain OS boot process in detail ? (Lecture 6: How Operating System Boots up?)34. What is inter process communication ?35. Shared Memory model vs message passing ?36. Preemptive vs non-preemtive scheduling ?37. Orphan and Zombie process ?38. How to prevent starvation ? (Aging : slowly increase priority over time)39. What is context switching and why it is necessary ?40. What is multiprogramming vs multi processing vs multi tasking OS ?41. What is Process Control Block ?42. What is safe state ?43. What is Dispatcher ? (A module which actually gives control of CPU to process once theCPU scheduler decides which process to be given CPU)44. STS vs LTS vs MTS45. How to achieve process synchronisation ?46. Multi-threading and it’s advantages47. Necessary condition for dead-lock48. What is compaction and when does it occur ?49. Functions of OS ?50.How to recover from a deadlock?51. All problems such as producer-consumer , dining philosopher etc.For each protocol and server you must also remember the port number associated with itex: http 80 , FTP control : 21 and Data : 201.Explain all layers of OSI model ?2.Full form of OSI3.INternet follows which model , TCP/IP or OSI ? (ans : TCP/IP model, osi is referencemodel)4.Explain some protocols of Application layer ?5.What is DNS ?6.What is DHCP ? and how does the DHCP connection gets established ? (DORA)7.Explain functionality and responsibility of each layer of OSI model ?8.What is HTTP stand for ? what port number HTTP server runs (80) ? and what is theunderlying transport layer protocol HTTP uses (TCP) ?",
Functions of OS,
50.How to recover from a deadlock,
"24. What is internal and external fragmentation ?25. What is non-contigous and contiguous memory mgmt ?26. What is cache memory ?27. What is a semaphore ? explain it’s types and usage ? (Binary vs counting )28. What are locks and how does it differ from semaphores ?29. What is the critical section ?30. What are race conditions and how does it occur ?31. What is mutual exclusion ?32. What is mutex ?33. Explain OS boot process in detail ? (Lecture 6: How Operating System Boots up?)34. What is inter process communication ?35. Shared Memory model vs message passing ?36. Preemptive vs non-preemtive scheduling ?37. Orphan and Zombie process ?38. How to prevent starvation ? (Aging : slowly increase priority over time)39. What is context switching and why it is necessary ?40. What is multiprogramming vs multi processing vs multi tasking OS ?41. What is Process Control Block ?42. What is safe state ?43. What is Dispatcher ? (A module which actually gives control of CPU to process once theCPU scheduler decides which process to be given CPU)44. STS vs LTS vs MTS45. How to achieve process synchronisation ?46. Multi-threading and it’s advantages47. Necessary condition for dead-lock48. What is compaction and when does it occur ?49. Functions of OS ?50.How to recover from a deadlock?51. All problems such as producer-consumer , dining philosopher etc.For each protocol and server you must also remember the port number associated with itex: http 80 , FTP control : 21 and Data : 201.Explain all layers of OSI model ?2.Full form of OSI3.INternet follows which model , TCP/IP or OSI ? (ans : TCP/IP model, osi is referencemodel)4.Explain some protocols of Application layer ?5.What is DNS ?6.What is DHCP ? and how does the DHCP connection gets established ? (DORA)7.Explain functionality and responsibility of each layer of OSI model ?8.What is HTTP stand for ? what port number HTTP server runs (80) ? and what is theunderlying transport layer protocol HTTP uses (TCP) ?",
Functions of OS,
50.How to recover from a deadlock,
"9.HTTP vs HTTPs (ports , functionality , security)10. What is VPN ?11. What is firewall ?12. Explain different types of networks. (PAN , WAN , MAN, LAN)13. What is a router ? (questions below are related to network devices please read aboutthem from chat-GPT) (IMP points : how many ports , on which layer it works ,functionality of device )14. Hub ?15. Bridge ?16. Repeater ?17. Switch ?18. Bus , STar , ring, mesh , tree and hybrid topology (See it from some website)19. What is an IP address ? Does it change ? WHy do we need an IP address ?20. WHat is Mac Address ? Does it typically change ?21. Why do we need IPv6 ?22. What are different classes of IPv4 ?23. What is class less Ip addressing ?24. Explain different classes of IP address with their range ? (A,B,C,D etc)25. What is a private IP address ?26. What is Network address translation ?27. How many layers in TCP/IP model (mention this to interviewer that there are 2explanations for this some book says 5 layers and include 1. Application 2. Transport 3.Network 4. Data Link 5. Physical where as some books mention 4 layers : 1. Application2. Transport 3. Internet 4.Link layer )28. Explain some protocols from each layer ?29. What is SMTP ?30. What is ethernet protocol ?31. What is ARP and RARP protocol ?32. What is broadcast , multicast and unicast ?33. Tcp ? when to use ?34. Udp ? when to use ?35. What is FTP ?36. What is subnet mask ? what is subnetting and why do we need that ?37. What is routing ?38. Name some routing algorithms ?39. What is the difference b/w link state and distance vector routing algorithm ?40. What are the steps involved when you enter www.google.com in your browser ?DBMS1.ACID properties ? ( I for isolation not integrity )"
"2.What is database ? DB vs file system ?3.What is RDBMS ?4.DDL , DML , DCL and TCL5.DIfferent levels of abstraction in DBMS ? (logical/conceptual,view , physical)6.What is logical data independence and physical data independence ?7.What is entity-relationship ?8.Delete vs Drop vs truncate ?9.WHat are locks ? what is shared vs exclusive lock ?10. What is normalisation ?11. Explain 1 NF ? ( remember what is unique in all normal forms )12. 2 NF ?13. 3 NF ?14. BCNF ?15. What are keys in DBMS ?"
"16. Explain primary key ?17. Foreign key ?18. Candidate key ?19. Super key ?20. Composite key ?21. Surrogate key ?22. Constraints in DBMS and it’s types ?23. Views in DBMS ?24. What is Transaction in DBMS ?25.2 tier vs 3 tier architecture in DBMS26. Commonly asked DBMS interview questions|Set 2 (geeksforgeeks.org)27. Advantages of DBMS28. Grant , revoke and roll back29.What is functional Dependency?30. What is an attribute?31. What is an Entity set?32. What is Weak Entity set?33. What are the integrity rules in DBMS?34. What is Data Independence?35. What is Join?SQL :SQL Interview Questions CHEAT SHEET (2023) - InterviewBitSQL Interview Questions (2023) - GeeksforGeeksSQL Interview Questions (2023) - javatpointTop 115 SQL Interview Questions and Answers in 2023 | EdurekaAlso refer Love Babbar’s 1 hr SQL interview questions video :Lecture 10: Common SQL Queries for Interviews1.What are Constraints in SQL?2.What is a UNIQUE constraint?3.What is a Join? List its different types.4.What is a Self-Join?5.What is a Cross-Join?6.What is a Query?7.What is a SubQuery?8.What is the SELECT statement?9.What are some common clauses used with SELECT query in SQL?10. What are UNION, MINUS and INTERSECT commands? (Not so Imp)11. What is an Alias in SQL?12. What is a View?13. What are the TRUNCATE, DELETE and DROP statements?"
"(P.T.O.)14. What are Aggregate and Scalar functions? ( avg(),min(),max() etc.)15. What is OLTP?16. What are the differences between OLTP and OLAP?17. No SQL vs SQLSOFTWARE ENGINEERING : Software Engineering: What It is, Definition, Tutorial -javatpoint1.What is Software Engineering ?2.Explain different process models in SE ?3.What is Software Development Life Cycle (SDLC) ?4.Why do we need SE process ?5.Need of SDLC ?6.Water fall model ?7.Agile ?8.Incremental development ?9.Iterative development ?"
"LINUX : (Linux Boot Process in Hindi | MPrashan)tZombie Processes: How To Hunt, Kill and Remove a Zombie Process on Linux - AlibabaCloud Communitylinux - How to kill zombie process - Stack Overflow1. What is LILO?Ans: LILO means Linux Loader is a boot loader that is used for the Linux operating system.Most of the Linux Operating systems use LILO, to boot the operating system into mainmemory to start the operations."
1. What is LILO?
Ans: LILO means Linux Loader is a boot loader that is used for the Linux operating system.
"Most of the Linux Operating systems use LILO, to boot the operating system into main"
memory to start the operations.
""
""
""
"LINUX : (Linux Boot Process in Hindi | MPrashan)tZombie Processes: How To Hunt, Kill and Remove a Zombie Process on Linux - AlibabaCloud Communitylinux - How to kill zombie process - Stack Overflow1. What is LILO?Ans: LILO means Linux Loader is a boot loader that is used for the Linux operating system.Most of the Linux Operating systems use LILO, to boot the operating system into mainmemory to start the operations."
1. What is LILO?
Ans: LILO means Linux Loader is a boot loader that is used for the Linux operating system.
"Most of the Linux Operating systems use LILO, to boot the operating system into main"
memory to start the operations.
""
""
""
LINUX NETWORKING :Top Linux Network Commands in 2023 (mindmajix.com)
""
LINUX NETWORKING :Top Linux Network Commands in 2023 (mindmajix.com)
""
LINUX NETWORKING :Top Linux Network Commands in 2023 (mindmajix.com)
""
LINUX NETWORKING :Top Linux Network Commands in 2023 (mindmajix.com)
""
"PROCESS MANAGEMENT COMMANDS : Commands for Process Management inLinux | DigitalOceanLinux/Unix Process Management: ps, kill, top, df, free, nice Commands (guru99.com)Commands for Process Management in Linux (linuxhint.com)"
PROCESS MANAGEMENT COMMANDS : Commands for Process Management in
Linux | DigitalOcean
"Linux/Unix Process Management: ps, kill, top, df, free, nice Commands (guru99.com)"
Commands for Process Management in Linux (linuxhint.com)
""
""
""
"PROCESS MANAGEMENT COMMANDS : Commands for Process Management inLinux | DigitalOceanLinux/Unix Process Management: ps, kill, top, df, free, nice Commands (guru99.com)Commands for Process Management in Linux (linuxhint.com)"
PROCESS MANAGEMENT COMMANDS : Commands for Process Management in
Linux | DigitalOcean
"Linux/Unix Process Management: ps, kill, top, df, free, nice Commands (guru99.com)"
Commands for Process Management in Linux (linuxhint.com)
""
""
""
